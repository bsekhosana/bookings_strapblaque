{
    "openapi": "3.0.0",
    "info": {
        "title": "Bookings Strapblaque API Documentation",
        "description": "This is the API documentation for the application.",
        "contact": {
            "email": "info@strapblaque.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/admin/organizations": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "List all organizations",
                "description": "Returns a list of all organizations in the system.",
                "operationId": "cf80617840f2bf64f1257bed014be3aa",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Create a new organization",
                "description": "Creates a new organization.",
                "operationId": "473753ce50639f1d1451210bab3e527a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Organization Name"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "contact@organization.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Organization created"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/admin/organizations/{id}": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "View an organization",
                "description": "Returns details of a specific organization.",
                "operationId": "8d8113f1b252aa6db074364339fd76a5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Organization not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Update an organization",
                "description": "Updates the details of a specific organization.",
                "operationId": "0c08a5be7cba9a221334d57cb7402906",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Organization Name"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "updated@example.com"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Organization updated successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Organization not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Delete an organization",
                "description": "Deletes a specific organization.",
                "operationId": "c0da01a5b9a59aeebaa587e4101e99dd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organization deleted successfully"
                    },
                    "404": {
                        "description": "Organization not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/admin/organizations/{id}/edit": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Edit an organization",
                "description": "Returns the edit view for a specific organization.",
                "operationId": "c947f99d2534e1ab04a113c5ca30acfb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Organization not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/bookings": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "List all bookings",
                "description": "Returns all bookings for the authenticated organization.",
                "operationId": "eb7c332e8ba161904a1c0071040f61a5",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Create a new booking",
                "description": "Creates a new booking for the authenticated organization.",
                "operationId": "e33fa5a6507581f9b1e0d710a9a130d1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "service_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "client_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "client_email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "client_phone": {
                                        "type": "string",
                                        "example": "555-1234"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-08-01T09:00:00Z"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-08-01T10:00:00Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Booking created"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/bookings/{id}": {
            "put": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Update a booking",
                "description": "Updates the details of a specific booking.",
                "operationId": "fb300db4391c22f2232e2814d49641c7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "service_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "client_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "client_email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "client_phone": {
                                        "type": "string",
                                        "example": "555-1234"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-08-01T09:00:00Z"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-08-01T10:00:00Z"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "Confirmed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Booking updated successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Booking not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Delete a booking",
                "description": "Deletes a specific booking.",
                "operationId": "9f51d8752d2471c30540b89c13e933df",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking deleted successfully"
                    },
                    "404": {
                        "description": "Booking not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "List all services",
                "description": "Returns a paginated list of all services.",
                "operationId": "4c175c5d6594b4a5112bbe15a46e2bb4",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "Create a new service",
                "description": "Creates a new service.",
                "operationId": "b05b71c30267faa468172458580fb6fc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Consultation"
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "example": 60
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/services/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get a specific service",
                "description": "Returns the details of a specific service.",
                "operationId": "42775b582b563bc36a9e06ae850100bf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Services"
                ],
                "summary": "Update a service",
                "description": "Updates the details of a specific service.",
                "operationId": "38f6a6cc2f5cd3dfdf39805e7fa21996",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Consultation"
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "example": 60
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 120
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service updated successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Services"
                ],
                "summary": "Delete a service",
                "description": "Deletes a specific service.",
                "operationId": "c189d6ab2d037e8fb4228a535ae6a399",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Service deleted successfully"
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/subscription/plans": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "List all active subscription plans",
                "description": "Returns a list of all active subscription plans.",
                "operationId": "c86411aea0da8a4011ca7f20a1d1dc54",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/subscriptions": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get current subscription details",
                "description": "Returns the current subscription details for the authenticated organization.",
                "operationId": "8473d089bae310cee331da8d711850c1",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Subscribe to a new plan",
                "description": "Subscribes the authenticated organization to a new plan.",
                "operationId": "a71648bdc4f0b03d53530ab22adf00cd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "plan_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subscription created"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/subscriptions/cancel": {
            "put": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Cancel the current subscription",
                "description": "Cancels the current subscription for the authenticated organization.",
                "operationId": "e56244043c3b917c19715933f2dec354",
                "responses": {
                    "200": {
                        "description": "Subscription canceled successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/subscriptions/initiate-payment": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Initiate payment for a subscription plan",
                "description": "Initiates payment for a subscription plan and redirects to the payment gateway.",
                "operationId": "931509bb1c90add2dca4f74b60c37bb4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "plan_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "302": {
                        "description": "Redirect to payment gateway"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/subscriptions/payment-notify": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Handle payment notifications",
                "description": "Handles payment notifications from the payment gateway.",
                "operationId": "b345d738cf9ffdb4eafdbf8d3a226741",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "payment_status": {
                                        "type": "string",
                                        "example": "COMPLETE"
                                    },
                                    "custom_str1": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "custom_str2": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "signature": {
                                        "type": "string",
                                        "example": "abc123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment notification processed"
                    },
                    "400": {
                        "description": "Invalid signature"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/subscriptions/success": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Handle payment success",
                "description": "Handles successful payment and returns a success message.",
                "operationId": "03f5e1a30bc2074e0f3ff1090476865a",
                "responses": {
                    "200": {
                        "description": "Subscription activated successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/subscriptions/cancel": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Handle payment cancellation",
                "description": "Handles payment cancellation and returns a cancellation message.",
                "operationId": "cbcde7f2c1a2b05511986998a9bae021",
                "responses": {
                    "200": {
                        "description": "Payment was canceled"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Organizations",
            "description": "Operations related to managing organizations in the admin panel"
        },
        {
            "name": "Bookings",
            "description": "Operations related to bookings"
        },
        {
            "name": "Subscriptions",
            "description": "Operations related to subscriptions"
        },
        {
            "name": "Services",
            "description": "Services"
        }
    ]
}